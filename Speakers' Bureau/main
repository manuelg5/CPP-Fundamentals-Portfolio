#include <iostream>
#include <iomanip>
#include <string>
using namespace std;

struct Speaker {
    string name;
    string phone;
    string topic;
    double fee;
};

int main() {
    const int NUM_SPEAKERS = 5;
    Speaker speakers[NUM_SPEAKERS];     // fixed-size array of 5 speakers
    bool hasData = false;               // track whether user has entered data yet
    int choice = 0;

    while (true) {
        // Menu
        cout << "\n=== Speakers' Bureau ===\n";
        cout << "1. Enter " << NUM_SPEAKERS << " speakers\n";
        cout << "2. List all speakers\n";
        cout << "3. Exit\n";
        cout << "Select (1-3): ";

        if (!(cin >> choice)) {
            // bad input for menu choice
            cin.clear();
            cin.ignore(10000, '\n');
            cout << "Invalid choice.\n";
            continue;
        }
        cin.ignore(10000, '\n'); // discard the newline after the number

        if (choice == 1) {
            // Enter all speakers
            for (int i = 0; i < NUM_SPEAKERS; ++i) {
                cout << "\n-- Speaker " << (i + 1) << " --\n";

                // Name (non-empty)
                while (true) {
                    cout << "Name: ";
                    getline(cin, speakers[i].name);
                    if (!speakers[i].name.empty()) break;
                    cout << "  -> Name cannot be empty.\n";
                }

                // Phone (non-empty)
                while (true) {
                    cout << "Telephone Number: ";
                    getline(cin, speakers[i].phone);
                    if (!speakers[i].phone.empty()) break;
                    cout << "  -> Telephone number cannot be empty.\n";
                }

                // Topic (non-empty)
                while (true) {
                    cout << "Speaking Topic: ";
                    getline(cin, speakers[i].topic);
                    if (!speakers[i].topic.empty()) break;
                    cout << "  -> Topic cannot be empty.\n";
                }

                // Fee (number and >= 0)
                while (true) {
                    cout << "Fee Required (>= 0): ";
                    if (cin >> speakers[i].fee && speakers[i].fee >= 0.0) {
                        cin.ignore(10000, '\n'); // consume newline
                        break;
                    }
                    cout << "  -> Fee must be a non-negative number.\n";
                    cin.clear();
                    cin.ignore(10000, '\n');
                }
            }
            hasData = true;
            cout << "\nAll speaker records captured.\n";

        } else if (choice == 2) {
            // List all speakers
            if (!hasData) {
                cout << "\nNo data entered yet. Choose option 1 first.\n";
                continue;
            }

            cout << "\nSPEAKERS' BUREAU LIST\n";
            cout << left << setw(4)  << "#"
                 << left << setw(25) << "Name"
                 << left << setw(18) << "Telephone"
                 << left << setw(28) << "Topic"
                 << right << setw(10) << "Fee\n";

            cout << string(4 + 25 + 18 + 28 + 10, '-') << "\n";
            cout << fixed << setprecision(2);

            for (int i = 0; i < NUM_SPEAKERS; ++i) {
                cout << left << setw(4)  << (i + 1)
                     << left << setw(25) << speakers[i].name
                     << left << setw(18) << speakers[i].phone
                     << left << setw(28) << speakers[i].topic
                     << right << setw(10) << speakers[i].fee
                     << "\n";
            }

        } else if (choice == 3) {
            cout << "\nGoodbye!\n";
            return 0;

        } else {
            cout << "Invalid choice.\n";
        }
    }
}
